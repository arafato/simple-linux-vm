{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "commonSettings": {
            "type": "object"
        },
        "subnet": {
            "type": "object"
        },
        "name": {
            "type": "string"
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A0"
        },
        "username": {
            "type": "string"
        },
        "secureShellKey": {
            "type": "securestring"
        },
        "image": {
            "type": "object",
            "defaultValue": {
                "publisher": "Canonical",
                "offer": "UbuntuServer",
                "sku": "16.04.0-LTS",
                "version": "latest"
            }
        },
        "storageSKU": {
            "type": "object",
            "defaultValue": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        "scriptExtensionSettings": {
            "type": "object",
            "defaultValue": {
                "commandToExecute": "echo"
            }
        }
    },
    "variables": {
        "name": "[parameters('name')]",
        "projectPrefix": "[parameters('commonSettings').projectPrefix]",
        "api": "[parameters('commonSettings').apiVersions]",
        "subnet": "[parameters('subnet')]",
        "storageSKU": "[parameters('storageSKU')]",
        "server": {
            "name": "[concat(variables('projectPrefix'), '-', variables('name'), '-vm')]",
            "storageName": "[concat(uniqueString(resourceGroup().id), variables('name'), 'host')]",
            "username": "[parameters('username')]",
            "secureShellKey": "[parameters('secureShellKey')]",
            "pubip": "[concat(variables('projectPrefix'), '-', variables('name'), '-pubip')]",
            "dnsLabel": "[concat(variables('projectPrefix'), variables('name'), 'host')]",
            "nicName": "[concat(variables('projectPrefix'), '-', variables('name'), '-nic')]",
            "imageReference": "[parameters('image')]",
            "vmSize": "[parameters('vmSize')]",
            "scriptExtensionSettings": "[parameters('scriptExtensionSettings')]"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('server').pubip]",
            "location": "[resourceGroup().location]",
            "apiVersion": "[variables('api').publicIPAddresses]",
            "tags": {
                "displayName": "PublicIP RDP-Host"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('server').dnsLabel]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('server').nicName]",
            "apiVersion": "[variables('api').networkInterfaces]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('server').pubip)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('server').pubip)]"
                            },
                            "subnet": {
                                "id": "[variables('subnet').id]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('server').storageName]",
            "apiVersion": "[variables('api').storageAccounts]",
            "location": "[resourceGroup().location]",
            "properties": {},
            "kind": "Storage",
            "sku": "[variables('storageSKU')]",
            "tags": {
                "displayName": "StorageAccount RDP-Host"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('server').name]",
            "apiVersion": "[variables('api').compute]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('server').nicName)]",
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('server').pubip)]",
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('server').storageName)]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('server').vmSize]"
                },
                "osProfile": {
                    "computerName": "[variables('server').name]",
                    "adminUsername": "[variables('server').username]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', variables('server').username, '/.ssh/authorized_keys')]",
                                    "keyData": "[variables('server').secureShellKey]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": "[variables('server').imageReference]",
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('https://', variables('server').storageName, '.blob.core.windows.net/', 'vhds/', 'osDisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('server').nicName)]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('server').name,'/installcustomscript')]",
            "apiVersion": "[variables('api').extensions]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('server').name)]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": "[variables('server').scriptExtensionSettings]"
            }
        }
    ]
}